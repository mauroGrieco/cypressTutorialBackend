name: Java CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  # Build Job
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build the project and skip tests
      - name: Build Project
        run: mvn --batch-mode -DskipTests package

      # Upload the build artifact for later use
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: target/*.jar

  # Test Job
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Download the build artifact from the build job
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: target

      # Run the tests
      - name: Run Tests
        run: mvn --batch-mode test

      # Analyze the test results and ensure at least 80% pass rate
      - name: Analyze Test Results
        run: |
          TOTAL_TESTS=$(grep -oP '(?<=<testsuite[^>]*tests=")\d+' target/surefire-reports/*.xml | awk '{s+=$1} END {print s}')
          FAILED_TESTS=$(grep -oP '(?<=<testsuite[^>]*failures=")\d+' target/surefire-reports/*.xml | awk '{s+=$1} END {print s}')
          SUCCESSFUL_TESTS=$((TOTAL_TESTS - FAILED_TESTS))
          SUCCESS_RATE=$(echo "scale=2; ($SUCCESSFUL_TESTS / $TOTAL_TESTS) * 100" | bc)

          echo "Total Tests: $TOTAL_TESTS"
          echo "Failed Tests: $FAILED_TESTS"
          echo "Success Rate: $SUCCESS_RATE%"

          if (( $(echo "$SUCCESS_RATE < 80" | bc -l) )); then
            echo "❌ Test Success Rate is below 80%! ($SUCCESS_RATE%)"
            exit 1
          else
            echo "✅ Test Success Rate is acceptable. ($SUCCESS_RATE%)"
          fi

      # Report the test results in the GitHub Actions overview
      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

  # Deploy Job
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Download the build artifact from the build job
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: target

      # Echo a message instead of deploying
      - name: Echo Deployment Message
        run: echo "Deploying to Staging Environment"
        env:
          API_KEY: ${{ secrets.API_KEY }}